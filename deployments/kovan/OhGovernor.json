{
  "address": "0x65afD8a9f3C24e0fF9A6E1ff8Cc92b8a0CF32195",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registry_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "delay_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "txHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "signature",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "CancelTransaction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "txHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "signature",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "ExecuteTransaction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "NewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newDelay",
          "type": "uint256"
        }
      ],
      "name": "NewDelay",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "NewPendingAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "txHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "signature",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "QueueTransaction",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "GRACE_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAXIMUM_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINIMUM_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "signature",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "cancelTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "bank",
          "type": "address"
        }
      ],
      "name": "executeEmergencyPause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "bank",
          "type": "address"
        }
      ],
      "name": "executePause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "signature",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "executeTransaction",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "bank",
          "type": "address"
        }
      ],
      "name": "executeUnpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "manager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "signature",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "queueTransaction",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "queuedTransactions",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "delay_",
          "type": "uint256"
        }
      ],
      "name": "setDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pendingAdmin_",
          "type": "address"
        }
      ],
      "name": "setPendingAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registry_",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x20e6d6fba1917ca82b69bcd05a96fd9a3d6db87c35f61c37b1fec7973a0f2915",
  "receipt": {
    "to": null,
    "from": "0x123456D302B690f8525B4BAC5681101d706e850e",
    "contractAddress": "0x65afD8a9f3C24e0fF9A6E1ff8Cc92b8a0CF32195",
    "transactionIndex": 1,
    "gasUsed": "1704904",
    "logsBloom": "0x
    "blockHash": "0xa85fffd2d82e9acda10153f92d42db71200fe50d530a6e401816218e75d45682",
    "transactionHash": "0x20e6d6fba1917ca82b69bcd05a96fd9a3d6db87c35f61c37b1fec7973a0f2915",
    "logs": [],
    "blockNumber": 26686265,
    "cumulativeGasUsed": "1746969",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x2bA8E99Fedc439da742F023D43b224E3d28eDf5e",
    "0xEE858AAa2Aff2d378A82865026Ba032f0e095c7d",
    172800
  ],
  "solcInputHash": "d58997e03a516940f0827c0bee3c7f29",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registry_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"delay_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"CancelTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ExecuteTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newDelay\",\"type\":\"uint256\"}],\"name\":\"NewDelay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"QueueTransaction\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GRACE_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAXIMUM_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"cancelTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bank\",\"type\":\"address\"}],\"name\":\"executeEmergencyPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bank\",\"type\":\"address\"}],\"name\":\"executePause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"executeTransaction\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bank\",\"type\":\"address\"}],\"name\":\"executeUnpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"signature\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"queueTransaction\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"queuedTransactions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"delay_\",\"type\":\"uint256\"}],\"name\":\"setDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingAdmin_\",\"type\":\"address\"}],\"name\":\"setPendingAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registry_\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Proposer-Executor RelationshipTransactions can be executed after the `delay` has passed\",\"kind\":\"dev\",\"methods\":{\"governance()\":{\"returns\":{\"_0\":\"The current Governance address\"}},\"manager()\":{\"returns\":{\"_0\":\"The current Manager address\"}},\"registry()\":{\"returns\":{\"_0\":\"The current Registry address\"}},\"setRegistry(address)\":{\"details\":\"Requires sender to be Governance of the new Registry to avoid bricking.Ideally should not be used\",\"params\":{\"registry_\":\"The new registry\"}}},\"title\":\"Oh! Finance Governor\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"MAXIMUM_DELAY()\":{\"notice\":\"Maximum time period transactions can be queued for\"},\"MINIMUM_DELAY()\":{\"notice\":\"Minimum time period transactions must be queued for\"},\"admin()\":{\"notice\":\"The Governor admin\"},\"delay()\":{\"notice\":\"Time delay before queued transactions can be executed\"},\"governance()\":{\"notice\":\"Get the Governance address\"},\"manager()\":{\"notice\":\"Get the Manager address\"},\"pendingAdmin()\":{\"notice\":\"The Governor admin pending acceptance\"},\"queuedTransactions(bytes32)\":{\"notice\":\"Transaction Queue of all successfull proposal actions\"},\"registry()\":{\"notice\":\"Get the Registry address\"},\"setRegistry(address)\":{\"notice\":\"Set the Registry for the contract. Only callable by Governance.\"}},\"notice\":\"Executor Contract that queues up and executes on-chain transactions to modify the protocolQueued actions must come from a successful proposal\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/governance/OhGovernor.sol\":\"OhGovernor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\"},\"contracts/governance/OhGovernor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.7.6;\\r\\n\\r\\nimport {Address} from \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\r\\nimport {SafeMath} from \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\r\\nimport {IBank} from \\\"../interfaces/bank/IBank.sol\\\";\\r\\nimport {IGovernor} from \\\"../interfaces/IGovernor.sol\\\";\\r\\nimport {IManager} from \\\"../interfaces/IManager.sol\\\";\\r\\nimport {OhSubscriber} from \\\"../registry/OhSubscriber.sol\\\";\\r\\n\\r\\n/// @title Oh! Finance Governor\\r\\n/// @notice Executor Contract that queues up and executes on-chain transactions to modify the protocol\\r\\n/// @notice Queued actions must come from a successful proposal\\r\\n/// @dev Proposer-Executor Relationship\\r\\n/// @dev Transactions can be executed after the `delay` has passed\\r\\ncontract OhGovernor is OhSubscriber, IGovernor {\\r\\n    using Address for address;\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    /// @notice\\r\\n    uint256 public constant override GRACE_PERIOD = 14 days;\\r\\n\\r\\n    /// @notice Minimum time period transactions must be queued for\\r\\n    uint256 public constant MINIMUM_DELAY = 2 days;\\r\\n\\r\\n    /// @notice Maximum time period transactions can be queued for\\r\\n    uint256 public constant MAXIMUM_DELAY = 30 days;\\r\\n\\r\\n    /// @notice The Governor admin\\r\\n    address public admin;\\r\\n\\r\\n    /// @notice The Governor admin pending acceptance\\r\\n    address public pendingAdmin;\\r\\n\\r\\n    /// @notice Time delay before queued transactions can be executed\\r\\n    uint256 public override delay;\\r\\n\\r\\n    /// @notice Transaction Queue of all successfull proposal actions\\r\\n    mapping(bytes32 => bool) public override queuedTransactions;\\r\\n\\r\\n    event NewAdmin(address indexed newAdmin);\\r\\n    event NewPendingAdmin(address indexed newPendingAdmin);\\r\\n    event NewDelay(uint256 indexed newDelay);\\r\\n    event CancelTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta);\\r\\n    event ExecuteTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta);\\r\\n    event QueueTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta);\\r\\n\\r\\n    modifier onlyAdmin {\\r\\n        require(msg.sender == admin, \\\"Governor: Only Admin\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlySelf {\\r\\n        require(msg.sender == address(this), \\\"Governor: Only Self\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(address registry_, address admin_, uint256 delay_) OhSubscriber(registry_) {\\r\\n        require(delay_ >= MINIMUM_DELAY, \\\"Governor: Delay Too Low\\\");\\r\\n        require(delay_ <= MAXIMUM_DELAY, \\\"Governor: Delay Too High\\\");\\r\\n\\r\\n        admin = admin_;\\r\\n        delay = delay_;\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n\\r\\n    function acceptAdmin() external override {\\r\\n        require(msg.sender == pendingAdmin, \\\"Governor: Only Pending Admin\\\");\\r\\n        admin = msg.sender;\\r\\n        pendingAdmin = address(0);\\r\\n\\r\\n        emit NewAdmin(admin);\\r\\n    }\\r\\n\\r\\n    function setPendingAdmin(address pendingAdmin_) external onlySelf {\\r\\n        pendingAdmin = pendingAdmin_;\\r\\n\\r\\n        emit NewPendingAdmin(pendingAdmin);\\r\\n    }\\r\\n\\r\\n    function setDelay(uint256 delay_) external onlySelf {\\r\\n        require(delay_ >= MINIMUM_DELAY, \\\"Governor: Delay Too Low\\\");\\r\\n        require(delay_ <= MAXIMUM_DELAY, \\\"Governor: Delay Too High\\\");\\r\\n        delay = delay_;\\r\\n\\r\\n        emit NewDelay(delay);\\r\\n    }\\r\\n\\r\\n    function cancelTransaction(\\r\\n        address target,\\r\\n        uint256 value,\\r\\n        string memory signature,\\r\\n        bytes memory data,\\r\\n        uint256 eta\\r\\n    ) external override onlyAdmin {\\r\\n        bytes32 txHash = keccak256(abi.encode(target, value, signature, data, eta));\\r\\n        queuedTransactions[txHash] = false;\\r\\n\\r\\n        emit CancelTransaction(txHash, target, value, signature, data, eta);\\r\\n    }\\r\\n\\r\\n    function executeTransaction(\\r\\n        address target,\\r\\n        uint256 value,\\r\\n        string memory signature,\\r\\n        bytes memory data,\\r\\n        uint256 eta\\r\\n    ) external payable override onlyAdmin returns (bytes memory) {\\r\\n        bytes32 txHash = keccak256(abi.encode(target, value, signature, data, eta));\\r\\n\\r\\n        require(queuedTransactions[txHash], \\\"Governor: Transaction Not Queued\\\");\\r\\n        require(getBlockTimestamp() >= eta, \\\"Governor: Transaction Expired\\\");\\r\\n        require(getBlockTimestamp() <= eta.add(GRACE_PERIOD), \\\"Governor: Transaction Stale\\\");\\r\\n\\r\\n        queuedTransactions[txHash] = false;\\r\\n\\r\\n        bytes memory callData;\\r\\n        if (bytes(signature).length == 0) {\\r\\n            callData = data;\\r\\n        } else {\\r\\n            callData = abi.encodePacked(bytes4(keccak256(bytes(signature))), data);\\r\\n        }\\r\\n\\r\\n        // (bool success, bytes memory returnData) = target.call{value: value}(callData);\\r\\n        // require(success, \\\"Timelock::executeTransaction: Transaction execution reverted.\\\");\\r\\n        bytes memory returnData = target.functionCallWithValue(callData, value);\\r\\n\\r\\n        emit ExecuteTransaction(txHash, target, value, signature, data, eta);\\r\\n        return returnData;\\r\\n    }\\r\\n\\r\\n    function queueTransaction(\\r\\n        address target,\\r\\n        uint256 value,\\r\\n        string memory signature,\\r\\n        bytes memory data,\\r\\n        uint256 eta\\r\\n    ) external override onlyAdmin returns (bytes32) {\\r\\n        require(eta >= getBlockTimestamp().add(delay), \\\"Governor: ETA Too Short\\\");\\r\\n\\r\\n        bytes32 txHash = keccak256(abi.encode(target, value, signature, data, eta));\\r\\n        queuedTransactions[txHash] = true;\\r\\n\\r\\n        emit QueueTransaction(txHash, target, value, signature, data, eta);\\r\\n        return txHash;\\r\\n    }\\r\\n\\r\\n    function executeEmergencyPause(address bank) external override onlyAdmin {\\r\\n        IManager(manager()).exitAll(bank);\\r\\n        IBank(bank).pause();\\r\\n    }\\r\\n\\r\\n    function executePause(address bank) external override onlyAdmin {\\r\\n        IBank(bank).pause();\\r\\n    }\\r\\n\\r\\n    function executeUnpause(address bank) external override onlyAdmin {\\r\\n        IBank(bank).unpause();\\r\\n    }\\r\\n\\r\\n    function getBlockTimestamp() internal view returns (uint256) {\\r\\n        return block.timestamp;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xc9070e23e904b83d776fd1912c6ca85616f6a776096e1e27e5d850199e4a513d\",\"license\":\"MIT\"},\"contracts/interfaces/IGovernor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.7.6;\\r\\n\\r\\ninterface IGovernor {\\r\\n    function delay() external view returns (uint256);\\r\\n\\r\\n    function GRACE_PERIOD() external view returns (uint256);\\r\\n\\r\\n    function acceptAdmin() external;\\r\\n\\r\\n    function queuedTransactions(bytes32 hash) external view returns (bool);\\r\\n\\r\\n    function queueTransaction(\\r\\n        address target,\\r\\n        uint256 value,\\r\\n        string calldata signature,\\r\\n        bytes calldata data,\\r\\n        uint256 eta\\r\\n    ) external returns (bytes32);\\r\\n\\r\\n    function cancelTransaction(\\r\\n        address target,\\r\\n        uint256 value,\\r\\n        string calldata signature,\\r\\n        bytes calldata data,\\r\\n        uint256 eta\\r\\n    ) external;\\r\\n\\r\\n    function executeTransaction(\\r\\n        address target,\\r\\n        uint256 value,\\r\\n        string calldata signature,\\r\\n        bytes calldata data,\\r\\n        uint256 eta\\r\\n    ) external payable returns (bytes memory);\\r\\n\\r\\n    function executeEmergencyPause(address bank) external;\\r\\n\\r\\n    function executePause(address bank) external;\\r\\n\\r\\n    function executeUnpause(address bank) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x081c240cae9808422f0cbcd6240679ac2b1d402e6285760341e2a44171bfe556\",\"license\":\"MIT\"},\"contracts/interfaces/IManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.7.6;\\r\\n\\r\\ninterface IManager {\\r\\n    function token() external view returns (address);\\r\\n\\r\\n    function buybackFee() external view returns (uint256);\\r\\n\\r\\n    function managementFee() external view returns (uint256);\\r\\n\\r\\n    function liquidators(address from, address to) external view returns (address);\\r\\n\\r\\n    function whitelisted(address _contract) external view returns (bool);\\r\\n\\r\\n    function banks(uint256 i) external view returns (address);\\r\\n\\r\\n    function totalBanks() external view returns (uint256);\\r\\n\\r\\n    function strategies(address bank, uint256 i) external view returns (address);\\r\\n\\r\\n    function totalStrategies(address bank) external view returns (uint256);\\r\\n\\r\\n    function withdrawIndex(address bank) external view returns (uint256);\\r\\n\\r\\n    function setWithdrawIndex(uint256 i) external;\\r\\n\\r\\n    function rebalance(address bank) external;\\r\\n\\r\\n    function finance(address bank) external;\\r\\n\\r\\n    function financeAll(address bank) external;\\r\\n\\r\\n    function buyback(address from) external;\\r\\n\\r\\n    function accrueRevenue(\\r\\n        address bank,\\r\\n        address underlying,\\r\\n        uint256 amount\\r\\n    ) external;\\r\\n\\r\\n    function exitAll(address bank) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xc0c66419e11208a50a559f26741cba47e8ca11de58bcec2cfb49f89add51b0e4\",\"license\":\"MIT\"},\"contracts/interfaces/IRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.7.6;\\r\\n\\r\\ninterface IRegistry {\\r\\n    function governance() external view returns (address);\\r\\n\\r\\n    function manager() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x0de5594a9448d7ee99418c702cd627b88f4700319d6c8b5810463a5ccdd214d0\",\"license\":\"MIT\"},\"contracts/interfaces/ISubscriber.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.7.6;\\r\\n\\r\\ninterface ISubscriber {\\r\\n    function registry() external view returns (address);\\r\\n\\r\\n    function governance() external view returns (address);\\r\\n\\r\\n    function manager() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0xaf575b8b67d08bf63e597479572fd1b93b64d5b636828859f668bd6c48d404fc\",\"license\":\"MIT\"},\"contracts/interfaces/bank/IBank.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.7.6;\\r\\n\\r\\nimport {IBankStorage} from \\\"./IBankStorage.sol\\\";\\r\\n\\r\\ninterface IBank is IBankStorage {\\r\\n    function strategies(uint256 i) external view returns (address);\\r\\n\\r\\n    function totalStrategies() external view returns (uint256);\\r\\n\\r\\n    function underlyingBalance() external view returns (uint256);\\r\\n\\r\\n    function strategyBalance(uint256 i) external view returns (uint256);\\r\\n\\r\\n    function investedBalance() external view returns (uint256);\\r\\n\\r\\n    function virtualBalance() external view returns (uint256);\\r\\n\\r\\n    function virtualPrice() external view returns (uint256);\\r\\n\\r\\n    function pause() external;\\r\\n\\r\\n    function unpause() external;\\r\\n\\r\\n    function invest(address strategy, uint256 amount) external;\\r\\n\\r\\n    function investAll(address strategy) external;\\r\\n\\r\\n    function exit(address strategy, uint256 amount) external;\\r\\n\\r\\n    function exitAll(address strategy) external;\\r\\n\\r\\n    function deposit(uint256 amount) external;\\r\\n\\r\\n    function depositFor(uint256 amount, address recipient) external;\\r\\n\\r\\n    function withdraw(uint256 amount) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xb6de3defe08ace109d27988c102a358967a5265c2462193ab25681d8fa659aaa\",\"license\":\"MIT\"},\"contracts/interfaces/bank/IBankStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.7.6;\\r\\n\\r\\ninterface IBankStorage {\\r\\n    function paused() external view returns (bool);\\r\\n\\r\\n    function underlying() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0xda98d80e7a82404afa0ca24e3ce36ea5761301ab9bc4c573ee199af735f6f544\",\"license\":\"MIT\"},\"contracts/registry/OhSubscriber.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.7.6;\\r\\n\\r\\nimport {Address} from \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\r\\nimport {ISubscriber} from \\\"../interfaces/ISubscriber.sol\\\";\\r\\nimport {IRegistry} from \\\"../interfaces/IRegistry.sol\\\";\\r\\n\\r\\n/// @title Oh! Finance Subscriber\\r\\n/// @notice Base Oh! Finance contract used to control access throughout the protocol\\r\\nabstract contract OhSubscriber is ISubscriber {\\r\\n    address internal _registry;\\r\\n\\r\\n    /// @notice Only allow authorized addresses (governance or manager) to execute a function\\r\\n    modifier onlyAuthorized {\\r\\n        require(msg.sender == governance() || msg.sender == manager(), \\\"Subscriber: Only Authorized\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /// @notice Only allow the governance address to execute a function\\r\\n    modifier onlyGovernance {\\r\\n        require(msg.sender == governance(), \\\"Subscriber: Only Governance\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /// @notice Construct contract with the Registry\\r\\n    /// @param registry_ The address of the Registry\\r\\n    constructor(address registry_) {\\r\\n        require(Address.isContract(registry_), \\\"Subscriber: Invalid Registry\\\");\\r\\n        _registry = registry_;\\r\\n    }\\r\\n\\r\\n    /// @notice Get the Governance address\\r\\n    /// @return The current Governance address\\r\\n    function governance() public view override returns (address) {\\r\\n        return IRegistry(registry()).governance();\\r\\n    }\\r\\n\\r\\n    /// @notice Get the Manager address\\r\\n    /// @return The current Manager address\\r\\n    function manager() public view override returns (address) {\\r\\n        return IRegistry(registry()).manager();\\r\\n    }\\r\\n\\r\\n    /// @notice Get the Registry address\\r\\n    /// @return The current Registry address\\r\\n    function registry() public view override returns (address) {\\r\\n        return _registry;\\r\\n    }\\r\\n\\r\\n    /// @notice Set the Registry for the contract. Only callable by Governance.\\r\\n    /// @param registry_ The new registry\\r\\n    /// @dev Requires sender to be Governance of the new Registry to avoid bricking.\\r\\n    /// @dev Ideally should not be used\\r\\n    function setRegistry(address registry_) external onlyGovernance {\\r\\n        require(Address.isContract(registry_), \\\"Subscriber: Invalid Registry\\\");\\r\\n\\r\\n        _registry = registry_;\\r\\n        require(msg.sender == governance(), \\\"Subscriber: Bad Governance\\\");\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x0020899072f62d95eafe3202eab714b3c538c0703e952d4a122436f180e00cb1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001e4738038062001e47833981810160405260608110156200003757600080fd5b5080516020808301516040909301519192919083906200006290829062001963620001b1821b17901c565b620000b4576040805162461bcd60e51b815260206004820152601c60248201527f537562736372696265723a20496e76616c696420526567697374727900000000604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b03929092169190911790556202a3008110156200012d576040805162461bcd60e51b815260206004820152601760248201527f476f7665726e6f723a2044656c617920546f6f204c6f77000000000000000000604482015290519081900360640190fd5b62278d0081111562000186576040805162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a2044656c617920546f6f20486967680000000000000000604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b03939093169290921790915560035550620001b7565b3b151590565b611c8080620001c76000396000f3fe6080604052600436106101235760003560e01c80636a42b8f8116100a0578063b1b43ae511610064578063b1b43ae514610740578063c1a287e214610755578063e177246e1461076a578063f2b0653714610794578063f851a440146107d25761012a565b80636a42b8f81461069b5780637b103999146106b05780637d645fab146106c5578063a407f62b146106da578063a91ee0dc1461070d5761012a565b8063481c6a75116100e7578063481c6a75146104be5780634d11dcf3146104d35780634dd18bf514610506578063591fcdfe146105395780635aa6e675146106865761012a565b80630825f38f1461012f5780630e18b681146102e457806326782247146102fb57806335ac63b11461032c5780633a66f9011461035f5761012a565b3661012a57005b600080fd5b61026f600480360360a081101561014557600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b81111561017457600080fd5b82018360208201111561018657600080fd5b803590602001918460018302840111600160201b831117156101a757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156101f957600080fd5b82018360208201111561020b57600080fd5b803590602001918460018302840111600160201b8311171561022c57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050913592506107e7915050565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102a9578181015183820152602001610291565b50505050905090810190601f1680156102d65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102f057600080fd5b506102f9610c66565b005b34801561030757600080fd5b50610310610d1b565b604080516001600160a01b039092168252519081900360200190f35b34801561033857600080fd5b506102f96004803603602081101561034f57600080fd5b50356001600160a01b0316610d2a565b34801561036b57600080fd5b506104ac600480360360a081101561038257600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b8111156103b157600080fd5b8201836020820111156103c357600080fd5b803590602001918460018302840111600160201b831117156103e457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561043657600080fd5b82018360208201111561044857600080fd5b803590602001918460018302840111600160201b8311171561046957600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505091359250610dd6915050565b60408051918252519081900360200190f35b3480156104ca57600080fd5b506103106110fd565b3480156104df57600080fd5b506102f9600480360360208110156104f657600080fd5b50356001600160a01b0316611170565b34801561051257600080fd5b506102f96004803603602081101561052957600080fd5b50356001600160a01b0316611201565b34801561054557600080fd5b506102f9600480360360a081101561055c57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b81111561058b57600080fd5b82018360208201111561059d57600080fd5b803590602001918460018302840111600160201b831117156105be57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561061057600080fd5b82018360208201111561062257600080fd5b803590602001918460018302840111600160201b8311171561064357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550509135925061129b915050565b34801561069257600080fd5b50610310611555565b3480156106a757600080fd5b506104ac611597565b3480156106bc57600080fd5b5061031061159d565b3480156106d157600080fd5b506104ac6115ac565b3480156106e657600080fd5b506102f9600480360360208110156106fd57600080fd5b50356001600160a01b03166115b3565b34801561071957600080fd5b506102f96004803603602081101561073057600080fd5b50356001600160a01b03166116b2565b34801561074c57600080fd5b506104ac611804565b34801561076157600080fd5b506104ac61180b565b34801561077657600080fd5b506102f96004803603602081101561078d57600080fd5b5035611812565b3480156107a057600080fd5b506107be600480360360208110156107b757600080fd5b503561193f565b604080519115158252519081900360200190f35b3480156107de57600080fd5b50610310611954565b6001546060906001600160a01b03163314610840576040805162461bcd60e51b815260206004820152601460248201527323b7bb32b93737b91d1027b7363c9020b236b4b760611b604482015290519081900360640190fd5b6000868686868660405160200180866001600160a01b031681526020018581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b838110156108a657818101518382015260200161088e565b50505050905090810190601f1680156108d35780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b838110156109065781810151838201526020016108ee565b50505050905090810190601f1680156109335780820380516001836020036101000a031916815260200191505b5060408051601f1981840301815291815281516020928301206000818152600490935291205490995060ff1697506109ba9650505050505050576040805162461bcd60e51b815260206004820181905260248201527f476f7665726e6f723a205472616e73616374696f6e204e6f7420517565756564604482015290519081900360640190fd5b826109c3611969565b1015610a16576040805162461bcd60e51b815260206004820152601d60248201527f476f7665726e6f723a205472616e73616374696f6e2045787069726564000000604482015290519081900360640190fd5b610a23836212750061196d565b610a2b611969565b1115610a7e576040805162461bcd60e51b815260206004820152601b60248201527f476f7665726e6f723a205472616e73616374696f6e205374616c650000000000604482015290519081900360640190fd5b6000818152600460205260409020805460ff191690558451606090610aa4575083610b27565b85805190602001208560405160200180836001600160e01b031916815260040182805190602001908083835b60208310610aef5780518252601f199092019160209182019101610ad0565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405290505b6000610b3d6001600160a01b038a16838a6119ce565b9050886001600160a01b0316837fa560e3198060a2f10670c1ec5b403077ea6ae93ca8de1c32b451dc1a943cd6e78a8a8a8a604051808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015610bbc578181015183820152602001610ba4565b50505050905090810190601f168015610be95780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b83811015610c1c578181015183820152602001610c04565b50505050905090810190601f168015610c495780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a398975050505050505050565b6002546001600160a01b03163314610cc5576040805162461bcd60e51b815260206004820152601c60248201527f476f7665726e6f723a204f6e6c792050656e64696e672041646d696e00000000604482015290519081900360640190fd5b60018054336001600160a01b031991821617918290556002805490911690556040516001600160a01b03909116907f71614071b88dee5e0b2ae578a9dd7b2ebbe9ae832ba419dc0242cd065a290b6c90600090a2565b6002546001600160a01b031681565b6001546001600160a01b03163314610d80576040805162461bcd60e51b815260206004820152601460248201527323b7bb32b93737b91d1027b7363c9020b236b4b760611b604482015290519081900360640190fd5b806001600160a01b0316633f4ba83a6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610dbb57600080fd5b505af1158015610dcf573d6000803e3d6000fd5b5050505050565b6001546000906001600160a01b03163314610e2f576040805162461bcd60e51b815260206004820152601460248201527323b7bb32b93737b91d1027b7363c9020b236b4b760611b604482015290519081900360640190fd5b610e43600354610e3d611969565b9061196d565b821015610e97576040805162461bcd60e51b815260206004820152601760248201527f476f7665726e6f723a2045544120546f6f2053686f7274000000000000000000604482015290519081900360640190fd5b6000868686868660405160200180866001600160a01b031681526020018581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015610efd578181015183820152602001610ee5565b50505050905090810190601f168015610f2a5780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b83811015610f5d578181015183820152602001610f45565b50505050905090810190601f168015610f8a5780820380516001836020036101000a031916815260200191505b5097505050505050505060405160208183030381529060405280519060200120905060016004600083815260200190815260200160002060006101000a81548160ff021916908315150217905550866001600160a01b0316817f76e2796dc3a81d57b0e8504b647febcbeeb5f4af818e164f11eef8131a6a763f88888888604051808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b8381101561105557818101518382015260200161103d565b50505050905090810190601f1680156110825780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b838110156110b557818101518382015260200161109d565b50505050905090810190601f1680156110e25780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a39695505050505050565b600061110761159d565b6001600160a01b031663481c6a756040518163ffffffff1660e01b815260040160206040518083038186803b15801561113f57600080fd5b505afa158015611153573d6000803e3d6000fd5b505050506040513d602081101561116957600080fd5b5051905090565b6001546001600160a01b031633146111c6576040805162461bcd60e51b815260206004820152601460248201527323b7bb32b93737b91d1027b7363c9020b236b4b760611b604482015290519081900360640190fd5b806001600160a01b0316638456cb596040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610dbb57600080fd5b33301461124b576040805162461bcd60e51b815260206004820152601360248201527223b7bb32b93737b91d1027b7363c9029b2b63360691b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0383811691909117918290556040519116907f69d78e38a01985fbb1462961809b4b2d65531bc93b2b94037f3334b82ca4a75690600090a250565b6001546001600160a01b031633146112f1576040805162461bcd60e51b815260206004820152601460248201527323b7bb32b93737b91d1027b7363c9020b236b4b760611b604482015290519081900360640190fd5b6000858585858560405160200180866001600160a01b031681526020018581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b8381101561135757818101518382015260200161133f565b50505050905090810190601f1680156113845780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b838110156113b757818101518382015260200161139f565b50505050905090810190601f1680156113e45780820380516001836020036101000a031916815260200191505b5097505050505050505060405160208183030381529060405280519060200120905060006004600083815260200190815260200160002060006101000a81548160ff021916908315150217905550856001600160a01b0316817f2fffc091a501fd91bfbff27141450d3acb40fb8e6d8382b243ec7a812a3aaf8787878787604051808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b838110156114af578181015183820152602001611497565b50505050905090810190601f1680156114dc5780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b8381101561150f5781810151838201526020016114f7565b50505050905090810190601f16801561153c5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a3505050505050565b600061155f61159d565b6001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b15801561113f57600080fd5b60035481565b6000546001600160a01b031690565b62278d0081565b6001546001600160a01b03163314611609576040805162461bcd60e51b815260206004820152601460248201527323b7bb32b93737b91d1027b7363c9020b236b4b760611b604482015290519081900360640190fd5b6116116110fd565b6001600160a01b031663eb0dff66826040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b15801561165f57600080fd5b505af1158015611673573d6000803e3d6000fd5b50505050806001600160a01b0316638456cb596040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610dbb57600080fd5b6116ba611555565b6001600160a01b0316336001600160a01b03161461171f576040805162461bcd60e51b815260206004820152601b60248201527f537562736372696265723a204f6e6c7920476f7665726e616e63650000000000604482015290519081900360640190fd5b61172881611963565b611779576040805162461bcd60e51b815260206004820152601c60248201527f537562736372696265723a20496e76616c696420526567697374727900000000604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b03831617905561179c611555565b6001600160a01b0316336001600160a01b031614611801576040805162461bcd60e51b815260206004820152601a60248201527f537562736372696265723a2042616420476f7665726e616e6365000000000000604482015290519081900360640190fd5b50565b6202a30081565b6212750081565b33301461185c576040805162461bcd60e51b815260206004820152601360248201527223b7bb32b93737b91d1027b7363c9029b2b63360691b604482015290519081900360640190fd5b6202a3008110156118b4576040805162461bcd60e51b815260206004820152601760248201527f476f7665726e6f723a2044656c617920546f6f204c6f77000000000000000000604482015290519081900360640190fd5b62278d0081111561190c576040805162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a2044656c617920546f6f20486967680000000000000000604482015290519081900360640190fd5b600381905560405181907f948b1f6a42ee138b7e34058ba85a37f716d55ff25ff05a763f15bed6a04c8d2c90600090a250565b60046020526000908152604090205460ff1681565b6001546001600160a01b031681565b3b151590565b4290565b6000828201838110156119c7576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60606119f4848484604051806060016040528060298152602001611c22602991396119fc565b949350505050565b606082471015611a3d5760405162461bcd60e51b8152600401808060200182810382526026815260200180611bfc6026913960400191505060405180910390fd5b611a4685611963565b611a97576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310611ad55780518252601f199092019160209182019101611ab6565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611b37576040519150601f19603f3d011682016040523d82523d6000602084013e611b3c565b606091505b5091509150611b4c828286611b57565b979650505050505050565b60608315611b665750816119c7565b825115611b765782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611bc0578181015183820152602001611ba8565b50505050905090810190601f168015611bed5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a2646970667358221220e7c8346673e35f3770729f0eb10ef7639f512cde57992702e455e6451ded908164736f6c63430007060033",
  "deployedBytecode": "",
  "devdoc": {
    "details": "Proposer-Executor RelationshipTransactions can be executed after the `delay` has passed",
    "kind": "dev",
    "methods": {
      "governance()": {
        "returns": {
          "_0": "The current Governance address"
        }
      },
      "manager()": {
        "returns": {
          "_0": "The current Manager address"
        }
      },
      "registry()": {
        "returns": {
          "_0": "The current Registry address"
        }
      },
      "setRegistry(address)": {
        "details": "Requires sender to be Governance of the new Registry to avoid bricking.Ideally should not be used",
        "params": {
          "registry_": "The new registry"
        }
      }
    },
    "title": "Oh! Finance Governor",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "MAXIMUM_DELAY()": {
        "notice": "Maximum time period transactions can be queued for"
      },
      "MINIMUM_DELAY()": {
        "notice": "Minimum time period transactions must be queued for"
      },
      "admin()": {
        "notice": "The Governor admin"
      },
      "delay()": {
        "notice": "Time delay before queued transactions can be executed"
      },
      "governance()": {
        "notice": "Get the Governance address"
      },
      "manager()": {
        "notice": "Get the Manager address"
      },
      "pendingAdmin()": {
        "notice": "The Governor admin pending acceptance"
      },
      "queuedTransactions(bytes32)": {
        "notice": "Transaction Queue of all successfull proposal actions"
      },
      "registry()": {
        "notice": "Get the Registry address"
      },
      "setRegistry(address)": {
        "notice": "Set the Registry for the contract. Only callable by Governance."
      }
    },
    "notice": "Executor Contract that queues up and executes on-chain transactions to modify the protocolQueued actions must come from a successful proposal",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12083,
        "contract": "contracts/governance/OhGovernor.sol:OhGovernor",
        "label": "_registry",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 9211,
        "contract": "contracts/governance/OhGovernor.sol:OhGovernor",
        "label": "admin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 9214,
        "contract": "contracts/governance/OhGovernor.sol:OhGovernor",
        "label": "pendingAdmin",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 9218,
        "contract": "contracts/governance/OhGovernor.sol:OhGovernor",
        "label": "delay",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 9224,
        "contract": "contracts/governance/OhGovernor.sol:OhGovernor",
        "label": "queuedTransactions",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_bytes32,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}